// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String?
  passwordHash String
  role         Role      @default(EDITOR)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  articles     Article[]
}

model Article {
  id             String    @id @default(cuid())
  title          String
  slug           String    @unique
  excerpt        String?
  content        String
  imageUrl       String?
  sourceText     String?   // original FB post text pasted by admin
  sourceImageUrl String?   // optional screenshot or image from FB
  topics         String[]  // article topics/categories
  isFeatured     Boolean   @default(false)
  publishedAt    DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  author       User?     @relation(fields: [authorId], references: [id])
  authorId     String?

  views        View[]

  @@index([publishedAt])
  @@index([createdAt])
}

model View {
  id         String   @id @default(cuid())
  article    Article  @relation(fields: [articleId], references: [id])
  articleId  String
  createdAt  DateTime @default(now())
  ipHash     String?  // hashed IP for lightweight dedup without storing PII
  userAgent  String?

  @@index([articleId, createdAt])
}

model Subscription {
  id          String    @id @default(cuid())
  email       String    @unique
  isActive    Boolean   @default(true)
  subscribedAt DateTime @default(now())
  unsubscribedAt DateTime?
  ipAddress   String?   // for GDPR compliance
  userAgent   String?   // for GDPR compliance
  source      String?   // where they subscribed from (homepage, article, etc.)
  
  @@index([email])
  @@index([isActive])
}

enum Role {
  ADMIN
  EDITOR
}
